# -*- coding: utf-8 -*-
"""Assignment-2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rWUWPEKtPByDKAqmt01FeRsMyXk9ZqFT
"""

import pandas as pd
import numpy as np

df=pd.read_csv("/content/TSLA.csv")
print(df)

df1=df.dropna()
print(df1)

df2=df.dropna(axis=1)
print(df2)

df3=df.fillna(df.mean())
print(df3)

import pandas as pd
data=pd.Series(([10,20,40,13,35,14,50]))
Z_scores=(data-data.mean())/data.std()
outliers=data[abs(Z_scores)>3]
print("univariate outliers:",outliers)

import numpy as np
data=(([[1,2],[2,3],[5,6],[10,12],[20,25]]))
mean=np.mean(data,axis=0)
cov_matrix=np.cov(data,rowvar=False)
inv_cov_matrix=np.linalg.inv(cov_matrix)

outliers=[]
for point in data:
  mahalanobis_dist=(point,mean,inv_cov_matrix)
  if mahalanobis_dist>thresold:
    outliers.append(point)

    print("Bivariate outliers:",outliers)



import pandas as pd
data=pd.Series([10,20,50,30,12,14,61])
upper_cap=50
lower_cap=5
data_clipped=data.clip(lower=lower_cap,upper=upper_cap)
print("Data with capped outliers:",data_clipped)

import numpy as np
import pandas as pd
data=pd.Series([10,20,50,30,12,14,61])
data_log_transformed=np.log(data)
print("Log-transformation data:",data_log_transformed)

import pandas as pd
import numpy as np
from scipy import stats

data = pd.read_csv("/content/TSLA.csv")
#Calculate z-scores for each column in the dataset
z_scores = np.abs(stats.zscore(data))

#Set a threshold for outlier detection (e.g., 2.5)
threshold = 2.5

#Find indices of outliers based on the z-scores
outlier_indices = np.where(z_scores > threshold)

#Filter the data to remove outliers
filtered_data = data[(z_scores <= threshold).all(axis=1)]

print("Indices of outliers:")
for i, row_index in enumerate(outlier_indices[0]):
  print(f"row {row_index} in column {outlier_indices[1][i]}")

  print("Filtered data:")
  print(filtered_data)Indices of outliers:

